# Day 14: Working with Multiple Providers - Part 1
## Participant Details

- **Name:**Rajiya Shaik
- **Task Completed:
**Reading: Start Chapter 7 of "Terraform: Up & Running"

Sections: "Working with One Provider", "What Is a Provider?", "How Do You Install Providers?", "How Do You Use Providers?", "Working with Multiple Copies of the Same Provider".

Activity:

Set up Terraform configurations using multiple copies of the same provider (e.g., deploying resources in multiple AWS regions or accounts).
Experiment with provider aliases and versions.

main.tf
```
terraform {
  required_version = ">= 1.0.0, < 2.0.0"

  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
}

provider "aws" {
  region = "us-east-2"
  alias  = "region_1"
}

provider "aws" {
  region = "us-west-1"
  alias  = "region_2"
}

data "aws_region" "region_1" {
  provider = aws.region_1
}

data "aws_region" "region_2" {
  provider = aws.region_2
}

resource "aws_instance" "region_1" {
  provider = aws.region_1

  ami           = data.aws_ami.ubuntu_region_1.id
  instance_type = "t2.micro"
}

resource "aws_instance" "region_2" {
  provider = aws.region_2

  ami           = data.aws_ami.ubuntu_region_2.id
  instance_type = "t2.micro"
}

data "aws_ami" "ubuntu_region_1" {
  provider = aws.region_1

  most_recent = true
  owners      = ["099720109477"] # Canonical

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
  }
}

data "aws_ami" "ubuntu_region_2" {
  provider = aws.region_2

  most_recent = true
  owners      = ["099720109477"] # Canonical

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
  }
}
```
outputs.tf
```
output "region_1" {
  value       = data.aws_region.region_1.name
  description = "The name of the first region"
}

output "region_2" {
  value       = data.aws_region.region_2.name
  description = "The name of the second region"
}

output "instance_region_1_az" {
  value       = aws_instance.region_1.availability_zone
  description = "The AZ where the instance in the first region deployed"
}

output "instance_region_2_az" {
  value       = aws_instance.region_2.availability_zone
  description = "The AZ where the instance in the second region deployed"
}
```

## links

[Day14-blog](https://medium.com/@sulthana.sk.1984/managing-multi-region-deployments-with-terraform-providers-2872b88fa720)

[Day14-linkedin](https://www.linkedin.com/posts/rajiyashaik_managing-multi-region-deployments-with-terraform-activity-7240802608460759041-Hlln?utm_source=share&utm_medium=member_desktop)